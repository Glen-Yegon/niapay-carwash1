import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";import{GLTFLoader}from"three/addons/loaders/GLTFLoader.js";let scene,camera,renderer,controls,car,clock;function init(){document.querySelector(".container");const e=document.querySelector(".canvas");scene=new THREE.Scene,clock=new THREE.Clock,camera=new THREE.PerspectiveCamera(500,window.innerWidth/window.innerHeight,1.1,500),camera.position.set(10,20,80),camera.lookAt(0,.5,0),renderer=new THREE.WebGLRenderer({canvas:e,antialias:!0,alpha:!0}),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(window.devicePixelRatio),renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap;const o=new THREE.HemisphereLight(16777215,5592405,1.5);o.position.set(0,10,0),scene.add(o);const n=new THREE.DirectionalLight(16777215,2);n.position.set(5,10,7),n.castShadow=!0,n.shadow.mapSize.width=2048,n.shadow.mapSize.height=2048,scene.add(n);const r=new THREE.PlaneGeometry(100,100),a=new THREE.MeshStandardMaterial({color:727073,roughness:1.9,metalness:1.1}),t=new THREE.Mesh(r,a);t.rotation.x=-Math.PI/2,t.position.y=-1.3,t.receiveShadow=!0,scene.add(t);(new GLTFLoader).load("./models/old_rusty_car.glb",e=>{car=e.scene,car.scale.set(.2,.2,.2),car.position.set(0,-1.1,0),car.rotation.y=Math.PI/4,car.traverse(e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0)}),scene.add(car)},e=>console.log(`Loading: ${e.loaded/e.total*100}%`),e=>console.error("Error loading model:",e)),controls=new OrbitControls(camera,renderer.domElement),controls.enableDamping=!0,controls.autoRotate=!0,controls.autoRotateSpeed=.7,controls.enableZoom=!1,controls.minPolarAngle=Math.PI/3,controls.maxPolarAngle=Math.PI/2,window.addEventListener("resize",onWindowResize)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){if(requestAnimationFrame(animate),car){const e=clock.getElapsedTime();car.position.y=.05*Math.sin(1.5*e)-1.1}controls.update(),renderer.render(scene,camera)}init(),animate();