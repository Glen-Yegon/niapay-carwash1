import*as fb from"./manager-firebase.js";import{auth,db}from"./manager-firebase.js";import{onAuthStateChanged}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-auth.js";import{doc,getDoc}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-firestore.js";const navBtns=document.querySelectorAll(".nav-btn"),panels=document.querySelectorAll(".panel"),pageTitle=document.getElementById("pageTitle"),managerName=document.getElementById("managerName"),toast=document.getElementById("toast"),pendingCount=document.getElementById("pendingCount"),inProgressCount=document.getElementById("inProgressCount"),completedCount=document.getElementById("completedCount"),revenueSum=document.getElementById("revenueSum"),activeStaff=document.getElementById("activeStaff"),quickJobsList=document.getElementById("quickJobsList"),jobsTableBody=document.querySelector("#jobsTable tbody"),filterStatus=document.getElementById("filterStatus"),searchInput=document.getElementById("searchInput"),refreshJobs=document.getElementById("refreshJobs"),staffGrid=document.getElementById("staffGrid"),reportsList=document.getElementById("reportsList"),usersList=document.getElementById("usersList"),activityLog=document.getElementById("activityLog");let jobsCache=[],usersCache=[];function showToast(e,t=3e3){toast.textContent=e,toast.style.display="block",setTimeout(()=>toast.style.display="none",t)}async function loadOverview(){try{const e=await fb.getOverview();pendingCount.textContent=e.pending,inProgressCount.textContent=e.inProgress,completedCount.textContent=e.completed,revenueSum.textContent=`Kshs ${Number(e.revenue||0).toLocaleString()}`;const t=new Set(e.quick.filter(e=>"In Progress"===e.status).map(e=>e.assignedTo).filter(Boolean));activeStaff.textContent=t.size||"0",quickJobsList.innerHTML="",e.quick.slice(0,8).forEach(e=>{const t=document.createElement("div");t.className="quick-item",t.innerHTML=`<strong>${e.plate}</strong> — ${e.status} — Ksh ${e.total}<br><small class="muted">${e.jobUUID||e.id}</small>`,quickJobsList.appendChild(t)})}catch(e){console.error("Overview load error",e),showToast("Error loading overview")}}async function loadJobs(){try{const e={status:filterStatus.value,search:searchInput.value},t=await fb.getJobs(e);jobsCache=t,renderJobsTable(t)}catch(e){console.error(e),showToast("Failed to load jobs")}}function renderJobsTable(e){jobsTableBody.innerHTML="",e&&e.length?e.forEach(e=>{const t=document.createElement("tr");t.innerHTML=`\n      <td><small>${e.jobUUID||""}</small></td>\n      <td>${e.plate||""}</td>\n      <td>${e.model||""}</td>\n      <td>${e.assignedTo||"—"}</td>\n      <td>${e.status||"—"}</td>\n      <td>Ksh ${e.total||0}</td>\n      <td>\n        <button class="btn small" data-action="assign">Assign</button>\n        <button class="btn small" data-action="toggle">${"Pending"===e.status?"Start":"In Progress"===e.status?"Finish":"Done"}</button>\n        <button class="btn small danger" data-action="delete">Delete</button>\n      </td>\n    `,t.querySelector('[data-action="assign"]').addEventListener("click",()=>showAssignDialog(e)),t.querySelector('[data-action="toggle"]').addEventListener("click",()=>toggleJobStatus(e)),t.querySelector('[data-action="delete"]').addEventListener("click",()=>deleteJob(e)),jobsTableBody.appendChild(t)}):jobsTableBody.innerHTML='<tr><td colspan="7" style="text-align:center;color:var(--muted)">No jobs found</td></tr>'}async function showAssignDialog(e){try{const t=(await fb.getUsers()).map(e=>e.name||e.email||e.uid),o=prompt(`Assign job ${e.jobUUID||e.firestoreId}\nAvailable staff:\n${t.join("\n")}\n\nEnter exact name to assign:`);if(!o)return;await fb.updateJobByDocId(e.firestoreId,{assignedTo:o,updatedAt:(new Date).toISOString()}),showToast("Assigned successfully"),loadJobs()}catch(e){console.error(e),showToast("Failed to assign")}}async function toggleJobStatus(e){try{let t;if("Pending"===e.status)t={status:"In Progress",startedAt:(new Date).toISOString()};else{if("In Progress"!==e.status)return void showToast("Job already completed");t={status:"Completed",completedAt:(new Date).toISOString()}}await fb.updateJobByDocId(e.firestoreId,{...t,updatedAt:(new Date).toISOString()}),showToast("Job updated"),loadJobs()}catch(e){console.error(e),showToast("Failed to update job")}}async function deleteJob(e){if(confirm(`Delete job ${e.jobUUID||e.firestoreId}? This can't be undone.`))try{await fb.deleteJobByDocId(e.firestoreId),showToast("Job deleted"),loadJobs()}catch(e){console.error(e),showToast("Failed to delete job")}}async function loadStaff(){try{const e=await fb.getUsers(),t=await fb.getJobs({status:"all",search:""});staffGrid.innerHTML="",e.forEach(e=>{const o=t.filter(t=>t.assignedTo===e.name&&"Completed"===t.status).length,a=t.filter(t=>t.assignedTo===e.name&&"In Progress"===t.status).length,n=computeAvgTimeForUser(t,e.name),s=document.createElement("div");s.className="staff-card",s.innerHTML=`\n        <h4>${e.name||e.email||e.uid}</h4>\n        <div class="meta">Completed: ${o} • In Progress: ${a}</div>\n        <div class="meta">Avg time: ${n}</div>\n        <div class="progress"><i style="width:${Math.min(100,10*o)}%;"></i></div>\n      `,staffGrid.appendChild(s)})}catch(e){console.error(e),showToast("Failed to load staff")}}function computeAvgTimeForUser(e,t){const o=e.filter(e=>e.assignedTo===t&&e.startedAt&&e.completedAt);if(!o.length)return"—";const a=o.reduce((e,t)=>e+(new Date(t.completedAt)-new Date(t.startedAt)),0)/o.length;return`${Math.round(a/6e4)} min`}async function loadReports(){try{const e=await fb.getJobs({status:"all",search:""}),t=e.reduce((e,t)=>e+Number(t.total||0),0),o=computePopularServices(e);reportsList.innerHTML="";[`Total jobs in system: ${e.length}`,`Total revenue: Ksh ${t}`,`Most requested services: ${o.join(", ")||"—"}`].forEach(e=>{const t=document.createElement("li");t.textContent=e,reportsList.appendChild(t)})}catch(e){console.error(e),showToast("Failed to load reports")}}navBtns.forEach(e=>{e.addEventListener("click",()=>{navBtns.forEach(e=>e.classList.remove("active")),e.classList.add("active"),panels.forEach(e=>e.classList.remove("active"));const t=e.dataset.area;document.getElementById(t).classList.add("active"),pageTitle.textContent=e.textContent,"overview"===t&&loadOverview(),"jobs"===t&&loadJobs(),"staff"===t&&loadStaff(),"reports"===t&&loadReports(),"admin"===t&&loadUsers(),"activity"===t&&loadActivity()})}),document.addEventListener("DOMContentLoaded",async()=>{managerName.textContent="Manager",await loadOverview()}),refreshJobs?.addEventListener("click",loadJobs),filterStatus?.addEventListener("change",loadJobs),searchInput?.addEventListener("input",()=>{setTimeout(loadJobs,250)});const cashReportList=document.getElementById("cashReportList"),cashReportDateFilter=document.getElementById("cashReportDateFilter"),generateCashReportBtn=document.getElementById("generateCashReport"),exportCashReportBtn=document.getElementById("exportCashReport");async function loadCashReport(e){loader.classList.remove("hidden");try{const t=await fb.getJobs({status:"all",search:""}),o=new Date;let a=null;switch(e){case"today":a=new Date(o.setHours(0,0,0,0));break;case"week":a=new Date(o.setDate(o.getDate()-7));break;case"month":a=new Date(o.setMonth(o.getMonth()-1));break;case"3months":a=new Date(o.setMonth(o.getMonth()-3));break;case"year":a=new Date(o.setFullYear(o.getFullYear()-1));break;default:a=null}const n=a?t.filter(e=>new Date(e.createdAt)>=a):t,s={};n.forEach(e=>{const t=e.payment||"Unknown";s[t]=(s[t]||0)+Number(e.total||0)});const r=n.reduce((e,t)=>e+Number(t.total||0),0);cashReportList.innerHTML="",Object.entries(s).forEach(([e,t])=>{const o=document.createElement("li");o.textContent=`${e}: Ksh ${t.toLocaleString()}`,cashReportList.appendChild(o)});const c=document.createElement("li");c.textContent=`Total Revenue: Ksh ${r.toLocaleString()} | Total Jobs: ${n.length}`,cashReportList.appendChild(c)}catch(e){console.error("Cash report error",e),showToast("Failed to load cash report")}finally{loader.classList.add("hidden")}}function computePopularServices(e){const t={};return e.forEach(e=>{(e.services||[]).forEach(e=>{t[e.name]=(t[e.name]||0)+1})}),Object.entries(t).sort((e,t)=>t[1]-e[1]).slice(0,5).map(e=>e[0])}async function loadUsers(){try{usersList.innerHTML="Loading...";const e=await fb.getUsers();usersCache=e,usersList.innerHTML="",e.length||(usersList.innerHTML="<div class='muted'>No staff accounts found</div>"),e.forEach(e=>{const t=document.createElement("div");t.className="user-row",t.innerHTML=`\n        <div>\n          <div><strong>${e.name||e.email||e.uid}</strong></div>\n          <div class="meta">${e.role||"staff"} • ${e.email||""}</div>\n        </div>\n        <div class="actions">\n          <button class="btn small" data-uid="${e.uid}" data-action="remove">Remove</button>\n        </div>\n      `,t.querySelector('[data-action="remove"]').addEventListener("click",()=>removeStaff(e)),usersList.appendChild(t)})}catch(e){console.error(e),usersList.innerHTML="<div class='muted'>Failed to load users</div>"}}async function removeStaff(e){if(confirm(`Remove staff ${e.name||e.email||e.uid}?`))try{await fb.deleteUserFromFirestore(e.uid),showToast("User removed from Firestore");try{const t=await fb.deleteAuthUserViaFunction(e.uid);t&&t.success?showToast("User removed from Auth"):showToast("Auth deletion failed (check server function)")}catch(e){console.warn("Auth deletion error (server function required):",e),showToast("Auth deletion failed: server function required")}loadUsers()}catch(e){console.error(e),showToast("Failed to remove staff")}}async function loadActivity(){try{const e=await fb.getActivity(50);activityLog.innerHTML="",e.forEach(e=>{const t=document.createElement("div");t.className="activity-item",t.innerHTML=`<div><strong>${e.plate}</strong> — ${e.status}</div><div class="meta small">${e.jobUUID||e.id} • ${e.time||""}</div>`,activityLog.appendChild(t)})}catch(e){console.error(e),activityLog.innerHTML="<div class='muted'>Failed to load activity</div>"}}generateCashReportBtn.addEventListener("click",async()=>{await loadCashReport(cashReportDateFilter.value)}),exportCashReportBtn.addEventListener("click",()=>{if(!cashReportList.children.length)return void showToast("Generate a report first");const e="data:text/csv;charset=utf-8,"+Array.from(cashReportList.children).map(e=>e.textContent).join("\n"),t=encodeURI(e),o=document.createElement("a");o.setAttribute("href",t),o.setAttribute("download",`Cash_Report_${(new Date).toISOString().slice(0,10)}.csv`),document.body.appendChild(o),o.click(),document.body.removeChild(o),showToast("Report exported!")});const loader=document.getElementById("loader");async function applyFilter(e){const t=new Date;let o=null;switch(e){case"today":o=new Date(t.setHours(0,0,0,0));break;case"week":o=new Date(t.setDate(t.getDate()-7));break;case"month":o=new Date(t.setMonth(t.getMonth()-1));break;case"3months":o=new Date(t.setMonth(t.getMonth()-3));break;case"year":o=new Date(t.setFullYear(t.getFullYear()-1));break;default:o=null}loader.classList.remove("hidden");try{const e=query(collection(db,"customer"),orderBy("createdAt","desc")),t=await getDocs(e),a=[];t.forEach(e=>{const t=e.data(),n=new Date(t.createdAt);o?n>=o&&a.push({id:e.id,...t}):a.push({id:e.id,...t})}),renderJobs(a)}catch(e){console.error("❌ Error applying filter:",e)}finally{loader.classList.add("hidden")}}function exportToCSV(e,t){const o="data:text/csv;charset=utf-8,"+e.join("\n"),a=encodeURI(o),n=document.createElement("a");n.setAttribute("href",a),n.setAttribute("download",t+".csv"),document.body.appendChild(n),n.click(),document.body.removeChild(n),showToast("CSV exported!")}function exportToDOC(e,t){let o=e.map(e=>e+"<br>").join("");const a=new Blob(["<html><body>"+o+"</body></html>"],{type:"application/msword"});saveAs(a,t+".doc"),showToast("DOC exported!")}function exportToPDF(e,t){const o={content:e.map(e=>({text:e,margin:[0,2]})),defaultStyle:{fontSize:12}};pdfMake.createPdf(o).download(t+".pdf"),showToast("PDF exported!")}document.getElementById("applyFilterBtn").addEventListener("click",async()=>{const e=document.getElementById("dateFilter").value;await applyFilter(e)}),document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("welcome-message");onAuthStateChanged(auth,async t=>{if(t)try{const o=doc(db,"users",t.uid),a=await getDoc(o);if(a.exists()){const t=a.data(),o=(t.name||t.fullName||"Manager").split(" ")[0];e.textContent=`Welcome back, ${o} 👋`}else e.textContent="Welcome, Manager 👋"}catch(t){console.error("Error fetching user data:",t),e.textContent="Welcome, Manager 👋"}else window.location.href="sign.html"})}),document.querySelectorAll(".export-btn").forEach(e=>{e.addEventListener("click",async()=>{const t=e.dataset.exportTarget,o=document.getElementById(t);if(!o)return showToast("No data found to export");const a=prompt("Choose export format: csv / doc / pdf","csv");if(!a)return;const n=Array.from(o.children).map(e=>e.textContent||e.innerText);if(!n.length)return showToast("No data to export");const s=`${t}_${(new Date).toISOString().slice(0,10)}`;switch(a.toLowerCase()){case"csv":exportToCSV(n,s);break;case"doc":exportToDOC(n,s);break;case"pdf":exportToPDF(n,s);break;default:showToast("Unknown format")}})});