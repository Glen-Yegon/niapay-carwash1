import{initializeApp}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-app.js";import{getAuth}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-auth.js";import{getFirestore,collection,getDocs,query,orderBy,where,updateDoc,doc,deleteDoc,getDoc}from"https://www.gstatic.com/firebasejs/12.3.0/firebase-firestore.js";const firebaseConfig={apiKey:"AIzaSyCT1Zb6b9qBDxa2nrqNu_6cSJ6jCKfq4yY",authDomain:"niapay-carwash.firebaseapp.com",projectId:"niapay-carwash",storageBucket:"niapay-carwash.firebasestorage.app",messagingSenderId:"994223696529",appId:"1:994223696529:web:97e8e7807cc7338878ed30",measurementId:"G-NKDCNQZND5"},app=initializeApp(firebaseConfig),auth=getAuth(app),db=getFirestore(app);export async function getOverview(){const t=query(collection(db,"customer"),orderBy("createdAt","desc")),e=await getDocs(t);let o=0,r=0,s=0,a=0;const c=[];return e.forEach(t=>{const e=t.data();"Pending"===e.status&&o++,"In Progress"===e.status&&r++,"Completed"===e.status&&s++,e.total&&(a+=Number(e.total||0)),c.push({id:t.id,plate:e.plate,status:e.status,total:e.total||0,jobUUID:e.jobUUID||""})}),{pending:o,inProgress:r,completed:s,revenue:a,quick:c}}export async function getJobs(t={status:"all",search:""}){const e=query(collection(db,"customer"),orderBy("createdAt","desc")),o=await getDocs(e),r=[];o.forEach(t=>{r.push({firestoreId:t.id,...t.data()})});let s=r;if(t.status&&"all"!==t.status&&(s=s.filter(e=>e.status===t.status)),t.search&&t.search.trim()){const e=t.search.trim().toLowerCase();s=s.filter(t=>t.plate&&t.plate.toLowerCase().includes(e)||t.jobUUID&&t.jobUUID.toLowerCase().includes(e)||t.firestoreId&&t.firestoreId.toLowerCase().includes(e))}return s}export async function updateJobByDocId(t,e){const o=doc(db,"customer",t);return updateDoc(o,e)}export async function deleteJobByDocId(t){const e=doc(db,"customer",t);return deleteDoc(e)}export async function getUsers(){const t=query(collection(db,"users"),orderBy("createdAt","desc")),e=await getDocs(t),o=[];return e.forEach(t=>o.push({uid:t.id,...t.data()})),o}export async function deleteUserFromFirestore(t){const e=doc(db,"users",t);return deleteDoc(e)}export async function findJobDocByUUID(t){const e=query(collection(db,"customer"),where("jobUUID","==",t)),o=await getDocs(e);if(o.empty)return null;const r=o.docs[0];return{id:r.id,data:r.data()}}export async function getActivity(t=30){const e=query(collection(db,"customer"),orderBy("createdAt","desc")),o=await getDocs(e),r=[];return o.forEach(t=>{const e=t.data();r.push({id:t.id,plate:e.plate,status:e.status,jobUUID:e.jobUUID||"",time:e.updatedAt||e.createdAt||""})}),r.slice(0,t)}export async function deleteAuthUserViaFunction(t){try{const e="/deleteUser",o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:t})});if(!o.ok){const t=await o.text();throw new Error(`Function error: ${t}`)}return await o.json()}catch(t){throw t}}export{db,auth};